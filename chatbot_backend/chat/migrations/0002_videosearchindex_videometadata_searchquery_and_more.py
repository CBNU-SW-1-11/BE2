# Generated by Django 4.2.18 on 2025-07-30 01:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoSearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchable_text', models.TextField(default='')),
                ('keywords', models.JSONField(default=list)),
                ('all_objects', models.JSONField(default=list)),
                ('dominant_objects', models.JSONField(default=list)),
                ('object_counts', models.JSONField(default=dict)),
                ('person_attributes_summary', models.JSONField(default=dict)),
                ('clothing_colors', models.JSONField(default=list)),
                ('gender_distribution', models.JSONField(default=dict)),
                ('weather_tags', models.JSONField(default=list)),
                ('time_tags', models.JSONField(default=list)),
                ('location_tags', models.JSONField(default=list)),
                ('visual_features', models.JSONField(default=dict)),
                ('scene_complexity_avg', models.FloatField(default=0.0)),
                ('search_weights', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('index_version', models.CharField(default='1.0', max_length=20)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='search_index', to='chat.video')),
            ],
            options={
                'db_table': 'video_search_index',
            },
        ),
        migrations.CreateModel(
            name='VideoMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominant_weather', models.CharField(default='unknown', max_length=50)),
                ('weather_confidence', models.FloatField(default=0.0)),
                ('weather_analysis', models.JSONField(default=dict)),
                ('dominant_time_period', models.CharField(default='unknown', max_length=50)),
                ('time_confidence', models.FloatField(default=0.0)),
                ('estimated_hour_range', models.CharField(default='unknown', max_length=50)),
                ('overall_brightness', models.FloatField(default=0.0)),
                ('overall_contrast', models.FloatField(default=0.0)),
                ('scene_complexity', models.FloatField(default=0.0)),
                ('dominant_colors', models.JSONField(default=list)),
                ('color_diversity', models.FloatField(default=0.0)),
                ('location_type', models.CharField(default='unknown', max_length=100)),
                ('location_confidence', models.FloatField(default=0.0)),
                ('analysis_timestamp', models.DateTimeField(auto_now_add=True)),
                ('analysis_version', models.CharField(default='1.0', max_length=20)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='chat.video')),
            ],
            options={
                'db_table': 'video_metadata',
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.TextField()),
                ('query_hash', models.CharField(max_length=64, unique=True)),
                ('search_conditions', models.JSONField(default=dict)),
                ('matching_videos', models.JSONField(default=list)),
                ('result_count', models.IntegerField(default=0)),
                ('search_duration_ms', models.IntegerField(default=0)),
                ('cache_hit', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=1)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'search_queries',
                'indexes': [models.Index(fields=['query_hash'], name='search_quer_query_h_45d1f4_idx'), models.Index(fields=['last_used'], name='search_quer_last_us_9ea687_idx')],
            },
        ),
        migrations.CreateModel(
            name='TemporalStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_timestamp', models.FloatField()),
                ('end_timestamp', models.FloatField()),
                ('duration', models.FloatField()),
                ('total_persons_detected', models.IntegerField(default=0)),
                ('unique_persons_estimated', models.IntegerField(default=0)),
                ('male_count', models.IntegerField(default=0)),
                ('female_count', models.IntegerField(default=0)),
                ('unknown_gender_count', models.IntegerField(default=0)),
                ('gender_analysis_confidence', models.FloatField(default=0.0)),
                ('child_count', models.IntegerField(default=0)),
                ('adult_count', models.IntegerField(default=0)),
                ('elderly_count', models.IntegerField(default=0)),
                ('activity_density', models.FloatField(default=0.0)),
                ('movement_intensity', models.FloatField(default=0.0)),
                ('top_colors', models.JSONField(default=list)),
                ('detailed_statistics', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporal_stats', to='chat.video')),
            ],
            options={
                'db_table': 'temporal_statistics',
                'indexes': [models.Index(fields=['start_timestamp', 'end_timestamp'], name='temporal_st_start_t_6aea15_idx'), models.Index(fields=['activity_density'], name='temporal_st_activit_1b8619_idx')],
            },
        ),
        migrations.CreateModel(
            name='PersonDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField()),
                ('track_id', models.IntegerField(blank=True, null=True)),
                ('bbox_x1', models.FloatField()),
                ('bbox_y1', models.FloatField()),
                ('bbox_x2', models.FloatField()),
                ('bbox_y2', models.FloatField()),
                ('confidence', models.FloatField()),
                ('gender_estimation', models.CharField(default='unknown', max_length=20)),
                ('gender_confidence', models.FloatField(default=0.0)),
                ('age_group', models.CharField(default='unknown', max_length=30)),
                ('age_confidence', models.FloatField(default=0.0)),
                ('upper_body_color', models.CharField(default='unknown', max_length=30)),
                ('upper_color_confidence', models.FloatField(default=0.0)),
                ('lower_body_color', models.CharField(default='unknown', max_length=30)),
                ('lower_color_confidence', models.FloatField(default=0.0)),
                ('posture', models.CharField(default='unknown', max_length=50)),
                ('posture_confidence', models.FloatField(default=0.0)),
                ('detailed_attributes', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_detections', to='chat.frame')),
            ],
            options={
                'db_table': 'person_detections',
                'indexes': [models.Index(fields=['track_id'], name='person_dete_track_i_e89073_idx'), models.Index(fields=['gender_estimation', 'gender_confidence'], name='person_dete_gender__185784_idx'), models.Index(fields=['upper_body_color'], name='person_dete_upper_b_5e95fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='ObjectTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.IntegerField()),
                ('object_class', models.CharField(max_length=50)),
                ('first_appearance', models.FloatField()),
                ('last_appearance', models.FloatField()),
                ('total_duration', models.FloatField()),
                ('tracking_confidence', models.FloatField(default=0.0)),
                ('total_detections', models.IntegerField(default=0)),
                ('tracking_quality', models.CharField(default='medium', max_length=20)),
                ('movement_path', models.JSONField(default=list)),
                ('movement_distance', models.FloatField(default=0.0)),
                ('average_speed', models.FloatField(default=0.0)),
                ('person_attributes', models.JSONField(blank=True, null=True)),
                ('interacted_objects', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='object_tracks', to='chat.video')),
            ],
            options={
                'db_table': 'object_tracking',
                'indexes': [models.Index(fields=['track_id'], name='object_trac_track_i_786454_idx'), models.Index(fields=['object_class'], name='object_trac_object__3a3c11_idx'), models.Index(fields=['first_appearance', 'last_appearance'], name='object_trac_first_a_b6dce7_idx')],
                'unique_together': {('video', 'track_id', 'object_class')},
            },
        ),
    ]
